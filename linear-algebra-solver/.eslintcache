<<<<<<< HEAD
[{"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\index.js":"1","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\App.js":"2","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\reportWebVitals.js":"3","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\pages\\Login.js":"4","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Formulario-login.js":"5","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\pages\\Home.js":"6","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\config-url.js":"7","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Info-usuario.js":"8","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Contestados-ejercicios.js":"9","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Lista-ejercicios.js":"10","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Authentication.js":"11","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Formulario-signup.js":"12","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Ejercicio.js":"13","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Crear-ejercicio.js":"14","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Error.js":"15","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Temas.js":"16"},{"size":517,"mtime":1608081055510,"results":"17","hashOfConfig":"18"},{"size":563,"mtime":1610468974029,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1608081055511,"results":"20","hashOfConfig":"18"},{"size":5546,"mtime":1611255349285,"results":"21","hashOfConfig":"18"},{"size":1429,"mtime":1610736708685,"results":"22","hashOfConfig":"18"},{"size":15593,"mtime":1611255505459,"results":"23","hashOfConfig":"18"},{"size":83,"mtime":1610738408155,"results":"24","hashOfConfig":"18"},{"size":4554,"mtime":1611255259585,"results":"25","hashOfConfig":"18"},{"size":1387,"mtime":1611255158106,"results":"26","hashOfConfig":"18"},{"size":2876,"mtime":1611289592431,"results":"27","hashOfConfig":"18"},{"size":251,"mtime":1610468479694,"results":"28","hashOfConfig":"18"},{"size":2591,"mtime":1610757381052,"results":"29","hashOfConfig":"18"},{"size":4254,"mtime":1611020670505,"results":"30","hashOfConfig":"18"},{"size":4329,"mtime":1611255195939,"results":"31","hashOfConfig":"18"},{"size":369,"mtime":1610824111410,"results":"32","hashOfConfig":"18"},{"size":12003,"mtime":1611254274748,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ratb5d",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\index.js",[],["69","70"],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\App.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\reportWebVitals.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\pages\\Login.js",["71"],"import '../css/login.css'\r\nimport React from 'react'\r\nimport {Container} from 'react-bootstrap'\r\nimport Log from '../componentes/Formulario-login'\r\nimport server from '../config-url'\r\nimport $ from 'jquery'\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            form: {\r\n                user: \"\",\r\n                pass: \"\"\r\n            },\r\n            registro:{\r\n                user: \"\",\r\n                pass: \"\",\r\n                app: \"\",\r\n                apm: \"\",\r\n                nombre: \"\"\r\n            },\r\n            res: {\r\n                data: {}\r\n            },\r\n            error: null\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    /* Change para guardar los campos del login */\r\n    handleChange = (e) => {\r\n\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /* Change para guardar los campos del registro */\r\n    handleChangeRegistrar = (e) => {\r\n\r\n        this.setState({\r\n            registro: {\r\n                ...this.state.registro,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /* Peticion para iniciar sesiÃ³n */\r\n    handleEnviar = () => {\r\n        if(this.state.form.user !== \"\" && this.state.form.pass !== \"\"){\r\n            var self = this\r\n            var url = server + 'LogIn?username=' + this.state.form.user + '&password=' + this.state.form.pass\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: url,\r\n                crossDomain: true,\r\n                dataType: 'json',\r\n                success: function (result) {\r\n                    if(result.state === 200){\r\n                        self.setState({\r\n                            res: { data: result }\r\n                        })\r\n                    //var d = JSON.stringify(self.state.res.data)\r\n                    window.localStorage.setItem(\"APP_USER\", JSON.stringify(self.state.res.data))\r\n                    window.localStorage.setItem(\"APP_LEVEL\", JSON.stringify(self.state.res.data.user.nivel))\r\n                    //console.log(JSON.parse(window.localStorage.getItem(\"APP_USER\")))\r\n                    window.location.href = '/home'\r\n                    }else{\r\n                        self.setState({\r\n                            error: result \r\n                        })\r\n                        alert(result.message)\r\n                    }\r\n                },\r\n                error: function (result) {\r\n                    self.setState({ error: result })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /* Peticion para enviar el registro del usuario */\r\n    handleEnviarRegistro = () => {\r\n        if (this.state.registro.apm !== \"\" && this.state.registro.app !== \"\" && this.state.registro.nombre !== \"\" && this.state.registro.pass !== \"\" && this.state.registro.user !== \"\"){\r\n            var self = this\r\n            var url = server + 'SignUp?user=' + this.state.registro.user + '&pass=' + this.state.registro.pass + '&ap_pat=' + this.state.registro.app + '&ap_mat=' + this.state.registro.apm + '&nombre=' + this.state.registro.nombre\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: url,\r\n                crossDomain: true,\r\n                dataType: 'json',\r\n                success: function (result) {\r\n                    if(result.state === 200){\r\n                        //console.log(self.state.res.data)  \r\n                        //var d = JSON.stringify(self.state.res.data)\r\n                        //window.localStorage.setItem(\"APP_USER\", JSON.stringify(self.state.res.data))\r\n                        alert(result.message + \", inicie sesiÃ³n\")\r\n                        self.setState({\r\n                            registro: {\r\n                                user: \"\",\r\n                                pass: \"\",\r\n                                app: \"\",\r\n                                apm: \"\",\r\n                                nombre: \"\"\r\n                            }\r\n                        })\r\n                        //console.log(JSON.parse(window.localStorage.getItem(\"APP_USER\")))\r\n                        //window.location.href = '/home'\r\n                    }else{\r\n                        alert(result.message)\r\n                        self.setState({ error: result })\r\n                    }\r\n                },\r\n                error: function (result) {\r\n                    self.setState({ error: result })\r\n                }\r\n            })\r\n            window.location.href = window.location.href\r\n        }\r\n    }\r\n\r\n    /* FunciÃ³n para evitar actualizacion de pantalla en el submit */\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Container fluid className=\"container_login\">\r\n                <div className=\"tittle_login\">\r\n                    <h1>Bienvenido a Linear Algebra Solver</h1>\r\n                    <h5>Por favor, inicie sesiÃ³n en su cuenta</h5>\r\n                </div>\r\n                <Log onChange={this.handleChange}\r\n                        onClick={this.handleEnviar}\r\n                        onSubmit={this.handleSubmit}\r\n                    cambia={this.handleChangeRegistrar}\r\n                    envia={this.handleEnviarRegistro} />\r\n            </Container>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Formulario-login.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\pages\\Home.js",["72","73","74","75"],"import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport User from '../componentes/Info-usuario'\r\nimport Contestados from '../componentes/Contestados-ejercicios'\r\nimport ListaEjercicios from '../componentes/Lista-ejercicios'\r\nimport Ejercicio from '../componentes/Ejercicio'\r\nimport CrearEjercicio from '../componentes/Crear-ejercicio'\r\nimport Error from '../componentes/Error'\r\nimport Temas from '../componentes/Temas'\r\nimport '../css/home.css'\r\nimport server from '../config-url'\r\nimport $ from 'jquery'\r\n\r\nclass Home extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: JSON.parse(window.localStorage.getItem(\"APP_USER\")),\r\n            admin: parseInt(window.localStorage.getItem(\"APP_LEVEL\"), 10),\r\n            vista: 0,\r\n            ejercicios: {                                                                                                   \r\n                respuesta: [],\r\n                ejer: []\r\n            },\r\n            ejercicioSeleccionado: [],\r\n            temas: [],\r\n            subtemas: [],\r\n            ejercicioCreado: {\r\n                titulo: \"\",\r\n                descripcion: \"\",\r\n                id_tema: \"\",\r\n                id_subtema: \"\",\r\n                imagen: \"\",\r\n                a: \"\",\r\n                b: \"\",\r\n                c: \"\",\r\n                d: \"\",\r\n                respuesta: \"\"\r\n            },\r\n            score: {\r\n                respuesta: [],\r\n                datos: []\r\n            },\r\n            respuestaUsuario: {\r\n                op: \"\"\r\n            },\r\n            ejercicioActualizado:{\r\n                titulo: \"\",\r\n                descripcion: \"\"\r\n            }\r\n        }\r\n        \r\n    } \r\n\r\n    /* Obtiene los ejercicios, los temas y el score del usuario una vez que el componente este renderizado */\r\n    componentDidMount(){\r\n        var self = this\r\n        var url = server + 'excercises/getAllExcercices'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    ejercicios:{\r\n                        respuesta: {'state': result.state,\r\n                                    'message': result.message},\r\n                        ejer: result.topics\r\n                    }\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        url = server + 'topics/getTopics'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    temas: result.temas\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        url = server + 'topics/getAllTopics'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    subtemas: result.topics\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        url = server + 'scoreboard/getScoreDetailsByIdUser?id_usuario=' + this.state.data.user.id_usuario\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    score: {\r\n                        respuesta: {'state': result.state,\r\n                                    'message': result.message},\r\n                        datos: result.score\r\n                    }\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n    }\r\n\r\n    /* PeticiÃ³n para obtener todos los ejercicios */\r\n    handleObtienesTodosEjercicios = () => {\r\n        this.setState({\r\n            vista: 0\r\n        })\r\n        var self = this\r\n        var url = server + 'excercises/getAllExcercices'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    ejercicios: {\r\n                        respuesta: {\r\n                            'state': result.state,\r\n                            'message': result.message\r\n                        },\r\n                        ejer: result.topics\r\n                    }\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n    }\r\n\r\n    /* FucniÃ³n para cambiar a la vista Crear Ejercicio */\r\n    handleVistaCrearEjercicio = () => {\r\n        this.setState({\r\n            vista: 1\r\n        })\r\n    }\r\n\r\n    /* FucniÃ³n para enviar el Ejercicio Creado por el admin al server */\r\n    enviarEjercicioCreado = async() => {\r\n        var fd = new FormData(document.getElementById(\"fileinfo\"));\r\n        var self = this\r\n        var url = server + 'excercices/uploadExcercise'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            processData: false,  \r\n            contentType: false,\r\n            data: fd,\r\n            success: function (result) {\r\n                self.setState({\r\n                    vista: 0\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        window.location.href = window.location.href\r\n    }\r\n\r\n    /* FunciÃ³n para cambiar a la vista Ejercicio y obtiene la informaciÃ³n de ese ejercicio */\r\n    handleVistaEjercicio = (e) => {\r\n        var self = this\r\n        var url = server + 'excercices/getExcerciseById?id_ejercicio=' + e.target.id\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            processData: false,\r\n            contentType: false,\r\n            success: function (result) {\r\n                self.setState({\r\n                    vista: 2,\r\n                    ejercicioSeleccionado: result.ejercicio\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    /* Change para ir guardando los cambios del input ejercicio creado del admin */\r\n    handleChangeCrearEjercicio = (e) => {\r\n        this.setState({\r\n            ejercicioCreado: {\r\n                ...this.state.ejercicioCreado,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Change para ir guardando dinamicamente las respuestas del usuario al contestar un ejercicio */\r\n    handleChangeRespuestaUsuario = (e) => {\r\n        this.setState({\r\n            respuestaUsuario: {\r\n                ...this.state.respuestaUsuario,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Change para guardar los input del ejercicio actualizado del admin */\r\n    handleChangeEjercicioActualizado = (e) => {\r\n        this.setState({\r\n            ejercicioActualizado: {\r\n                ...this.state.ejercicioActualizado,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    /* PeticiÃ³n para obtener los ejercicios dependiendo el tema y cambia la vista a ejercicios por tema */\r\n    handleObtenEjerciciosTema = (e) => {\r\n        this.setState({\r\n            vista: 0\r\n        })\r\n        var self = this\r\n        var url = server + 'excercises/getExcercisesByIdTopic?id_tema=' + e.target.id\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    ejercicios: {\r\n                        respuesta: {\r\n                            'state': result.state,\r\n                            'message': result.message\r\n                        },\r\n                        ejer: result.ejercicios\r\n                    }\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n    }\r\n\r\n    /* FunciÃ³n para cancelar al resolver un ejercicio por parte del usuario */\r\n    handleBotonRegresoEjercicio = () => {\r\n        this.setState({\r\n            vista: 0\r\n        })\r\n    }\r\n\r\n    /* PeticiÃ³n para guardar el resultado del usuario al contestar un ejercicio */\r\n    handleEnviarRespuestaEjercicio = (e) => {\r\n        var respUs = this.state.respuestaUsuario.op\r\n        var respCorrect = this.state.ejercicioSeleccionado.respuesta\r\n        var calif\r\n        if(respUs.toLowerCase() === respCorrect.toLowerCase()){\r\n            calif = 1\r\n        }else{\r\n            calif = 0\r\n        }\r\n        var self = this\r\n        var url = server + 'scoreboard/score?evaluacion=' + calif + '&id_ejercicio=' + e.target.id + '&id_usuario='+this.state.data.user.id_usuario\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                alert(result.message)\r\n                if(result.state === 200){\r\n                    self.setState({\r\n                        vista: 0\r\n                    })\r\n                    window.location.href = window.location.href;\r\n                }\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n    }\r\n\r\n    /* PeticiÃ³n para borrar un ejercicio por parte del admin */\r\n    handleBorrarEjercicioPorId = (e) => {\r\n        var op = window.confirm(\"Â¿Desea eliminar este ejercicio?\\n\\nAl hacer click en aceptar esta acciÃ³n no se puede deshacer.\")\r\n        if(op){\r\n            var self = this\r\n            var url = server + 'excercises/deleteExcerciseById?id_ejercicio=' + e.target.id\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: url,\r\n                crossDomain: true,\r\n                dataType: 'json',\r\n                success: function (result) {\r\n                    alert(result.message)\r\n                },\r\n                error: function (result) {\r\n                    self.setState({ error: result })\r\n                }\r\n            })\r\n            window.location.href = window.location.href\r\n        }\r\n    }\r\n\r\n    /* PeticiÃ³n para guardar los cambios de un ejercicio por parte del admin */\r\n    handleEnviaUpdateEjercicio = (e) => {\r\n\r\n        var self = this\r\n        var url = server + 'excercises/updateExcercise?id_ejercicio=' + e.target.id + '&titulo=' + this.state.ejercicioActualizado.titulo +'&descripcion='+this.state.ejercicioActualizado.descripcion\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                alert(result.message)\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        window.location.href = window.location.href\r\n\r\n    }\r\n\r\n    /* FunciÃ³n para cambiar a la vista Temas */\r\n    handleVistaTemas = () => {\r\n        this.setState({\r\n            vista: 3\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid className=\"cont-home\">\r\n                <Row>\r\n                    <Col xl={2}>\r\n                        <Row>\r\n                            <Col xl={12}>\r\n                                <User {...this.state.data}\r\n                                    admin={this.state.admin}\r\n                                    crearEjercicio={this.handleVistaCrearEjercicio}\r\n                                    obtenEjercicioTema={this.handleObtenEjerciciosTema}\r\n                                    temas={this.state.temas}\r\n                                    muestraTodos={this.handleObtienesTodosEjercicios}\r\n                                    vistaTemas={this.handleVistaTemas}/>\r\n                            </Col>\r\n                            {/* Comprueba si el usuario es admin */\r\n                                this.state.admin === 0 &&\r\n                                <Col xl={12}>\r\n                                    <Contestados score={this.state.score.datos} />\r\n                                </Col>\r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Container fluid className=\"cont-ejer my-3 pt-2 pb-4\">\r\n                            {/* Comprueba la vista a mostrar */\r\n                                this.state.vista === 0 &&\r\n                                (\r\n                                    this.state.ejercicios.state === 404 ? <Error status={this.state.ejercicios.respuesta.state} mensaje={this.state.ejercicios.respuesta.message}/> :\r\n                                    <ListaEjercicios ejercicios={this.state.ejercicios.ejer}\r\n                                        onClick={this.handleClick}\r\n                                        admin={this.state.admin}\r\n                                        responder={this.handleVistaEjercicio}\r\n                                        borrar={this.handleBorrarEjercicioPorId}/>\r\n                                )\r\n                            }\r\n                            {/* Comprueba la vista a mostrar */\r\n                                this.state.vista === 1 &&\r\n                                <CrearEjercicio onClick={this.enviarEjercicioCreado}\r\n                                    onChange={this.handleChangeCrearEjercicio}\r\n                                    cancelar={this.handleBotonRegresoEjercicio}\r\n                                    temas={this.state.temas}\r\n                                    subtemas={this.state.subtemas}/>\r\n                            }\r\n                            {/* Comprueba la vista a mostrar */\r\n                                this.state.vista === 2 &&\r\n                                <Ejercicio \r\n                                    regresar={this.handleBotonRegresoEjercicio}\r\n                                    enviar={this.handleEnviarRespuestaEjercicio}\r\n                                    admin={this.state.admin}\r\n                                    ejercicio={this.state.ejercicioSeleccionado}\r\n                                    cambia={this.handleChangeRespuestaUsuario}\r\n                                    actualiza={this.handleChangeEjercicioActualizado}\r\n                                    enviaActualizacion={this.handleEnviaUpdateEjercicio}/>\r\n                            }\r\n                            {/* Comprueba la vista a mostrar */\r\n                                this.state.vista === 3 &&\r\n                                <Temas />\r\n                            }\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home","E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\config-url.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Info-usuario.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Contestados-ejercicios.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Lista-ejercicios.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Authentication.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Formulario-signup.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Ejercicio.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Crear-ejercicio.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Error.js",[],"E:\\Documentos Familia\\React\\proyecto adoo\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Temas.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":129,"column":36,"nodeType":"82","messageId":"83","endLine":129,"endColumn":56},{"ruleId":"80","severity":1,"message":"81","line":187,"column":32,"nodeType":"82","messageId":"83","endLine":187,"endColumn":52},{"ruleId":"80","severity":1,"message":"81","line":303,"column":44,"nodeType":"82","messageId":"83","endLine":303,"endColumn":64},{"ruleId":"80","severity":1,"message":"81","line":330,"column":36,"nodeType":"82","messageId":"83","endLine":330,"endColumn":56},{"ruleId":"80","severity":1,"message":"81","line":351,"column":32,"nodeType":"82","messageId":"83","endLine":351,"endColumn":52},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-self-assign","'window.location.href' is assigned to itself.","MemberExpression","selfAssignment","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\index.js":"1","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\App.js":"2","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\reportWebVitals.js":"3","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Authentication.js":"4","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\pages\\Login.js":"5","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\pages\\Home.js":"6","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Formulario-login.js":"7","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Error.js":"8","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Lista-ejercicios.js":"9","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Info-usuario.js":"10","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Ejercicio.js":"11","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Contestados-ejercicios.js":"12","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Crear-ejercicio.js":"13","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\config-url.js":"14","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Temas.js":"15","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Formulario-signup.js":"16"},{"size":517,"mtime":1610153020089,"results":"17","hashOfConfig":"18"},{"size":563,"mtime":1610582063471,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1610153020089,"results":"20","hashOfConfig":"18"},{"size":251,"mtime":1610582063471,"results":"21","hashOfConfig":"18"},{"size":5546,"mtime":1611258008283,"results":"22","hashOfConfig":"18"},{"size":15593,"mtime":1611258008282,"results":"23","hashOfConfig":"18"},{"size":1429,"mtime":1610770983589,"results":"24","hashOfConfig":"18"},{"size":369,"mtime":1610944845549,"results":"25","hashOfConfig":"18"},{"size":2654,"mtime":1610999404690,"results":"26","hashOfConfig":"18"},{"size":4554,"mtime":1611258008269,"results":"27","hashOfConfig":"18"},{"size":4254,"mtime":1611258008268,"results":"28","hashOfConfig":"18"},{"size":1387,"mtime":1611258008266,"results":"29","hashOfConfig":"18"},{"size":4329,"mtime":1611258008267,"results":"30","hashOfConfig":"18"},{"size":83,"mtime":1611282605852,"results":"31","hashOfConfig":"18"},{"size":12003,"mtime":1611258008270,"results":"32","hashOfConfig":"18"},{"size":2591,"mtime":1610770983589,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"anjx5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\index.js",[],["69","70"],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\App.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\reportWebVitals.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Authentication.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\pages\\Login.js",["71"],"import '../css/login.css'\r\nimport React from 'react'\r\nimport {Container} from 'react-bootstrap'\r\nimport Log from '../componentes/Formulario-login'\r\nimport server from '../config-url'\r\nimport $ from 'jquery'\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            form: {\r\n                user: \"\",\r\n                pass: \"\"\r\n            },\r\n            registro:{\r\n                user: \"\",\r\n                pass: \"\",\r\n                app: \"\",\r\n                apm: \"\",\r\n                nombre: \"\"\r\n            },\r\n            res: {\r\n                data: {}\r\n            },\r\n            error: null\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    /* Change para guardar los campos del login */\r\n    handleChange = (e) => {\r\n\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /* Change para guardar los campos del registro */\r\n    handleChangeRegistrar = (e) => {\r\n\r\n        this.setState({\r\n            registro: {\r\n                ...this.state.registro,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /* Peticion para iniciar sesiÃ³n */\r\n    handleEnviar = () => {\r\n        if(this.state.form.user !== \"\" && this.state.form.pass !== \"\"){\r\n            var self = this\r\n            var url = server + 'LogIn?username=' + this.state.form.user + '&password=' + this.state.form.pass\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: url,\r\n                crossDomain: true,\r\n                dataType: 'json',\r\n                success: function (result) {\r\n                    if(result.state === 200){\r\n                        self.setState({\r\n                            res: { data: result }\r\n                        })\r\n                    //var d = JSON.stringify(self.state.res.data)\r\n                    window.localStorage.setItem(\"APP_USER\", JSON.stringify(self.state.res.data))\r\n                    window.localStorage.setItem(\"APP_LEVEL\", JSON.stringify(self.state.res.data.user.nivel))\r\n                    //console.log(JSON.parse(window.localStorage.getItem(\"APP_USER\")))\r\n                    window.location.href = '/home'\r\n                    }else{\r\n                        self.setState({\r\n                            error: result \r\n                        })\r\n                        alert(result.message)\r\n                    }\r\n                },\r\n                error: function (result) {\r\n                    self.setState({ error: result })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /* Peticion para enviar el registro del usuario */\r\n    handleEnviarRegistro = () => {\r\n        if (this.state.registro.apm !== \"\" && this.state.registro.app !== \"\" && this.state.registro.nombre !== \"\" && this.state.registro.pass !== \"\" && this.state.registro.user !== \"\"){\r\n            var self = this\r\n            var url = server + 'SignUp?user=' + this.state.registro.user + '&pass=' + this.state.registro.pass + '&ap_pat=' + this.state.registro.app + '&ap_mat=' + this.state.registro.apm + '&nombre=' + this.state.registro.nombre\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: url,\r\n                crossDomain: true,\r\n                dataType: 'json',\r\n                success: function (result) {\r\n                    if(result.state === 200){\r\n                        //console.log(self.state.res.data)  \r\n                        //var d = JSON.stringify(self.state.res.data)\r\n                        //window.localStorage.setItem(\"APP_USER\", JSON.stringify(self.state.res.data))\r\n                        alert(result.message + \", inicie sesiÃ³n\")\r\n                        self.setState({\r\n                            registro: {\r\n                                user: \"\",\r\n                                pass: \"\",\r\n                                app: \"\",\r\n                                apm: \"\",\r\n                                nombre: \"\"\r\n                            }\r\n                        })\r\n                        //console.log(JSON.parse(window.localStorage.getItem(\"APP_USER\")))\r\n                        //window.location.href = '/home'\r\n                    }else{\r\n                        alert(result.message)\r\n                        self.setState({ error: result })\r\n                    }\r\n                },\r\n                error: function (result) {\r\n                    self.setState({ error: result })\r\n                }\r\n            })\r\n            window.location.href = window.location.href\r\n        }\r\n    }\r\n\r\n    /* FunciÃ³n para evitar actualizacion de pantalla en el submit */\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Container fluid className=\"container_login\">\r\n                <div className=\"tittle_login\">\r\n                    <h1>Bienvenido a Linear Algebra Solver</h1>\r\n                    <h5>Por favor, inicie sesiÃ³n en su cuenta</h5>\r\n                </div>\r\n                <Log onChange={this.handleChange}\r\n                        onClick={this.handleEnviar}\r\n                        onSubmit={this.handleSubmit}\r\n                    cambia={this.handleChangeRegistrar}\r\n                    envia={this.handleEnviarRegistro} />\r\n            </Container>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\pages\\Home.js",["72","73","74","75"],"import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport User from '../componentes/Info-usuario'\r\nimport Contestados from '../componentes/Contestados-ejercicios'\r\nimport ListaEjercicios from '../componentes/Lista-ejercicios'\r\nimport Ejercicio from '../componentes/Ejercicio'\r\nimport CrearEjercicio from '../componentes/Crear-ejercicio'\r\nimport Error from '../componentes/Error'\r\nimport Temas from '../componentes/Temas'\r\nimport '../css/home.css'\r\nimport server from '../config-url'\r\nimport $ from 'jquery'\r\n\r\nclass Home extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: JSON.parse(window.localStorage.getItem(\"APP_USER\")),\r\n            admin: parseInt(window.localStorage.getItem(\"APP_LEVEL\"), 10),\r\n            vista: 0,\r\n            ejercicios: {                                                                                                   \r\n                respuesta: [],\r\n                ejer: []\r\n            },\r\n            ejercicioSeleccionado: [],\r\n            temas: [],\r\n            subtemas: [],\r\n            ejercicioCreado: {\r\n                titulo: \"\",\r\n                descripcion: \"\",\r\n                id_tema: \"\",\r\n                id_subtema: \"\",\r\n                imagen: \"\",\r\n                a: \"\",\r\n                b: \"\",\r\n                c: \"\",\r\n                d: \"\",\r\n                respuesta: \"\"\r\n            },\r\n            score: {\r\n                respuesta: [],\r\n                datos: []\r\n            },\r\n            respuestaUsuario: {\r\n                op: \"\"\r\n            },\r\n            ejercicioActualizado:{\r\n                titulo: \"\",\r\n                descripcion: \"\"\r\n            }\r\n        }\r\n        \r\n    } \r\n\r\n    /* Obtiene los ejercicios, los temas y el score del usuario una vez que el componente este renderizado */\r\n    componentDidMount(){\r\n        var self = this\r\n        var url = server + 'excercises/getAllExcercices'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    ejercicios:{\r\n                        respuesta: {'state': result.state,\r\n                                    'message': result.message},\r\n                        ejer: result.topics\r\n                    }\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        url = server + 'topics/getTopics'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    temas: result.temas\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        url = server + 'topics/getAllTopics'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    subtemas: result.topics\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        url = server + 'scoreboard/getScoreDetailsByIdUser?id_usuario=' + this.state.data.user.id_usuario\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    score: {\r\n                        respuesta: {'state': result.state,\r\n                                    'message': result.message},\r\n                        datos: result.score\r\n                    }\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n    }\r\n\r\n    /* PeticiÃ³n para obtener todos los ejercicios */\r\n    handleObtienesTodosEjercicios = () => {\r\n        this.setState({\r\n            vista: 0\r\n        })\r\n        var self = this\r\n        var url = server + 'excercises/getAllExcercices'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    ejercicios: {\r\n                        respuesta: {\r\n                            'state': result.state,\r\n                            'message': result.message\r\n                        },\r\n                        ejer: result.topics\r\n                    }\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n    }\r\n\r\n    /* FucniÃ³n para cambiar a la vista Crear Ejercicio */\r\n    handleVistaCrearEjercicio = () => {\r\n        this.setState({\r\n            vista: 1\r\n        })\r\n    }\r\n\r\n    /* FucniÃ³n para enviar el Ejercicio Creado por el admin al server */\r\n    enviarEjercicioCreado = async() => {\r\n        var fd = new FormData(document.getElementById(\"fileinfo\"));\r\n        var self = this\r\n        var url = server + 'excercices/uploadExcercise'\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            processData: false,  \r\n            contentType: false,\r\n            data: fd,\r\n            success: function (result) {\r\n                self.setState({\r\n                    vista: 0\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        window.location.href = window.location.href\r\n    }\r\n\r\n    /* FunciÃ³n para cambiar a la vista Ejercicio y obtiene la informaciÃ³n de ese ejercicio */\r\n    handleVistaEjercicio = (e) => {\r\n        var self = this\r\n        var url = server + 'excercices/getExcerciseById?id_ejercicio=' + e.target.id\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            processData: false,\r\n            contentType: false,\r\n            success: function (result) {\r\n                self.setState({\r\n                    vista: 2,\r\n                    ejercicioSeleccionado: result.ejercicio\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    /* Change para ir guardando los cambios del input ejercicio creado del admin */\r\n    handleChangeCrearEjercicio = (e) => {\r\n        this.setState({\r\n            ejercicioCreado: {\r\n                ...this.state.ejercicioCreado,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Change para ir guardando dinamicamente las respuestas del usuario al contestar un ejercicio */\r\n    handleChangeRespuestaUsuario = (e) => {\r\n        this.setState({\r\n            respuestaUsuario: {\r\n                ...this.state.respuestaUsuario,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Change para guardar los input del ejercicio actualizado del admin */\r\n    handleChangeEjercicioActualizado = (e) => {\r\n        this.setState({\r\n            ejercicioActualizado: {\r\n                ...this.state.ejercicioActualizado,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    /* PeticiÃ³n para obtener los ejercicios dependiendo el tema y cambia la vista a ejercicios por tema */\r\n    handleObtenEjerciciosTema = (e) => {\r\n        this.setState({\r\n            vista: 0\r\n        })\r\n        var self = this\r\n        var url = server + 'excercises/getExcercisesByIdTopic?id_tema=' + e.target.id\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                self.setState({\r\n                    ejercicios: {\r\n                        respuesta: {\r\n                            'state': result.state,\r\n                            'message': result.message\r\n                        },\r\n                        ejer: result.ejercicios\r\n                    }\r\n                })\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n    }\r\n\r\n    /* FunciÃ³n para cancelar al resolver un ejercicio por parte del usuario */\r\n    handleBotonRegresoEjercicio = () => {\r\n        this.setState({\r\n            vista: 0\r\n        })\r\n    }\r\n\r\n    /* PeticiÃ³n para guardar el resultado del usuario al contestar un ejercicio */\r\n    handleEnviarRespuestaEjercicio = (e) => {\r\n        var respUs = this.state.respuestaUsuario.op\r\n        var respCorrect = this.state.ejercicioSeleccionado.respuesta\r\n        var calif\r\n        if(respUs.toLowerCase() === respCorrect.toLowerCase()){\r\n            calif = 1\r\n        }else{\r\n            calif = 0\r\n        }\r\n        var self = this\r\n        var url = server + 'scoreboard/score?evaluacion=' + calif + '&id_ejercicio=' + e.target.id + '&id_usuario='+this.state.data.user.id_usuario\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                alert(result.message)\r\n                if(result.state === 200){\r\n                    self.setState({\r\n                        vista: 0\r\n                    })\r\n                    window.location.href = window.location.href;\r\n                }\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n    }\r\n\r\n    /* PeticiÃ³n para borrar un ejercicio por parte del admin */\r\n    handleBorrarEjercicioPorId = (e) => {\r\n        var op = window.confirm(\"Â¿Desea eliminar este ejercicio?\\n\\nAl hacer click en aceptar esta acciÃ³n no se puede deshacer.\")\r\n        if(op){\r\n            var self = this\r\n            var url = server + 'excercises/deleteExcerciseById?id_ejercicio=' + e.target.id\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: url,\r\n                crossDomain: true,\r\n                dataType: 'json',\r\n                success: function (result) {\r\n                    alert(result.message)\r\n                },\r\n                error: function (result) {\r\n                    self.setState({ error: result })\r\n                }\r\n            })\r\n            window.location.href = window.location.href\r\n        }\r\n    }\r\n\r\n    /* PeticiÃ³n para guardar los cambios de un ejercicio por parte del admin */\r\n    handleEnviaUpdateEjercicio = (e) => {\r\n\r\n        var self = this\r\n        var url = server + 'excercises/updateExcercise?id_ejercicio=' + e.target.id + '&titulo=' + this.state.ejercicioActualizado.titulo +'&descripcion='+this.state.ejercicioActualizado.descripcion\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            crossDomain: true,\r\n            dataType: 'json',\r\n            success: function (result) {\r\n                alert(result.message)\r\n            },\r\n            error: function (result) {\r\n                self.setState({ error: result })\r\n            }\r\n        })\r\n        window.location.href = window.location.href\r\n\r\n    }\r\n\r\n    /* FunciÃ³n para cambiar a la vista Temas */\r\n    handleVistaTemas = () => {\r\n        this.setState({\r\n            vista: 3\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid className=\"cont-home\">\r\n                <Row>\r\n                    <Col xl={2}>\r\n                        <Row>\r\n                            <Col xl={12}>\r\n                                <User {...this.state.data}\r\n                                    admin={this.state.admin}\r\n                                    crearEjercicio={this.handleVistaCrearEjercicio}\r\n                                    obtenEjercicioTema={this.handleObtenEjerciciosTema}\r\n                                    temas={this.state.temas}\r\n                                    muestraTodos={this.handleObtienesTodosEjercicios}\r\n                                    vistaTemas={this.handleVistaTemas}/>\r\n                            </Col>\r\n                            {/* Comprueba si el usuario es admin */\r\n                                this.state.admin === 0 &&\r\n                                <Col xl={12}>\r\n                                    <Contestados score={this.state.score.datos} />\r\n                                </Col>\r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <Container fluid className=\"cont-ejer my-3 pt-2 pb-4\">\r\n                            {/* Comprueba la vista a mostrar */\r\n                                this.state.vista === 0 &&\r\n                                (\r\n                                    this.state.ejercicios.state === 404 ? <Error status={this.state.ejercicios.respuesta.state} mensaje={this.state.ejercicios.respuesta.message}/> :\r\n                                    <ListaEjercicios ejercicios={this.state.ejercicios.ejer}\r\n                                        onClick={this.handleClick}\r\n                                        admin={this.state.admin}\r\n                                        responder={this.handleVistaEjercicio}\r\n                                        borrar={this.handleBorrarEjercicioPorId}/>\r\n                                )\r\n                            }\r\n                            {/* Comprueba la vista a mostrar */\r\n                                this.state.vista === 1 &&\r\n                                <CrearEjercicio onClick={this.enviarEjercicioCreado}\r\n                                    onChange={this.handleChangeCrearEjercicio}\r\n                                    cancelar={this.handleBotonRegresoEjercicio}\r\n                                    temas={this.state.temas}\r\n                                    subtemas={this.state.subtemas}/>\r\n                            }\r\n                            {/* Comprueba la vista a mostrar */\r\n                                this.state.vista === 2 &&\r\n                                <Ejercicio \r\n                                    regresar={this.handleBotonRegresoEjercicio}\r\n                                    enviar={this.handleEnviarRespuestaEjercicio}\r\n                                    admin={this.state.admin}\r\n                                    ejercicio={this.state.ejercicioSeleccionado}\r\n                                    cambia={this.handleChangeRespuestaUsuario}\r\n                                    actualiza={this.handleChangeEjercicioActualizado}\r\n                                    enviaActualizacion={this.handleEnviaUpdateEjercicio}/>\r\n                            }\r\n                            {/* Comprueba la vista a mostrar */\r\n                                this.state.vista === 3 &&\r\n                                <Temas />\r\n                            }\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home","C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Formulario-login.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Error.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Lista-ejercicios.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Info-usuario.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Ejercicio.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Contestados-ejercicios.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Crear-ejercicio.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\config-url.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Temas.js",[],"C:\\Users\\abyki\\Desktop\\coding\\linear-algebra-solver\\linear-algebra-solver\\src\\componentes\\Formulario-signup.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":129,"column":36,"nodeType":"82","messageId":"83","endLine":129,"endColumn":56},{"ruleId":"80","severity":1,"message":"81","line":187,"column":32,"nodeType":"82","messageId":"83","endLine":187,"endColumn":52},{"ruleId":"80","severity":1,"message":"81","line":303,"column":44,"nodeType":"82","messageId":"83","endLine":303,"endColumn":64},{"ruleId":"80","severity":1,"message":"81","line":330,"column":36,"nodeType":"82","messageId":"83","endLine":330,"endColumn":56},{"ruleId":"80","severity":1,"message":"81","line":351,"column":32,"nodeType":"82","messageId":"83","endLine":351,"endColumn":52},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-self-assign","'window.location.href' is assigned to itself.","MemberExpression","selfAssignment","no-global-assign","no-unsafe-negation"]
>>>>>>> d3e40c9d562f7152a45f87a43b50ff235264be4e
